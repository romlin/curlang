[
  {
    "id": "part-jwGnLUpaAQ",
    "type": "markdown",
    "disabled": false,
    "code": "# robot\nBuilt with Curlang"
  },
  {
    "id": "part-QmXOVcNDWj",
    "type": "curlang",
    "disabled": false,
    "code": "# Download granite-3.1-2b-instruct-Q4_K_M.gguf\n!find \"granite-3.1-2b-instruct-Q4_K_M.gguf\" {\n    get \"https://huggingface.co/bartowski/granite-3.1-2b-instruct-GGUF/resolve/main/granite-3.1-2b-instruct-Q4_K_M.gguf\" as \"granite-3.1-2b-instruct-Q4_K_M.gguf\" {\n        pass \"Download completed!\"\n        fail \"Download failed!\"\n    }\n} else \"granite-3.1-2b-instruct-Q4_K_M.gguf already exists.\""
  },
  {
    "id": "part-zy6zQmo78Y",
    "type": "curlang",
    "disabled": false,
    "code": "# Check whether granite-3.1-2b-instruct-Q4_K_M.gguf exists\nfind \"granite-3.1-2b-instruct-Q4_K_M.gguf\" {\n    print \"granite-3.1-2b-instruct-Q4_K_M.gguf exists.\"\n} else \"granite-3.1-2b-instruct-Q4_K_M.gguf is missing.\""
  },
  {
    "id": "part-5lIxk0G1gG",
    "type": "curlang",
    "disabled": false,
    "code": "use Llama:llama_cpp"
  },
  {
    "id": "part-feMZ0wtZU8",
    "type": "curlang",
    "disabled": false,
    "code": "python {\n    llm = Llama(\n        model_path=\"granite-3.1-2b-instruct-Q4_K_M.gguf\",\n        n_ctx=131072,\n        verbose=False\n    )\n\n    robot_prompt = \"\"\"\n        Control a robotic arm using text commands for precise, varied industrial operations. The arm has three moving parts:\n        - Base (B): rotates about the Y-axis.\n        - Shoulder (S): pivots on the X-axis within 0° to 45°.\n        - Elbow (E): rotates on the X-axis within –90° to 45°.\n\n        Each command consists of a letter (B, S, or E) followed by a signed angle (e.g., \"B+30\"). The \"C\" command toggles the claw to pick up or release items. Disregard any \"M\" commands.\n\n        Generate a coordinated, non-repetitive sequence that simulates realistic industrial tasks such as aligning parts, picking up boxes, stacking items, repositioning for optimal work, and assembling components. Use a broad range of angles within the specified limits to ensure diverse movements. Limit the sequence to a maximum of 20 commands and output them on one single line, with each command separated by a comma.\n    \"\"\"\n\n    output = llm(\n        f\"<|start_of_role|>system<|end_of_role|>You are a helpful assistant. Be concise and direct.<|end_of_text|><|start_of_role|>user<|end_of_role|>{robot_prompt}<|end_of_text|><|start_of_role|>assistant<|end_of_role|>\",\n        max_tokens=256,\n        stop=[\"<|endoftext|>\"],\n        seed=-1,\n        temperature=0.7\n    )[\"choices\"][0][\"text\"].strip()\n\n    with open(\"output/output.txt\", \"w\") as f:\n        f.write(output)\n\n    print(output)\n}"
  }
]